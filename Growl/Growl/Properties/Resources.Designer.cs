//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Growl.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Growl.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _1 {
            get {
                object obj = ResourceManager.GetObject("_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _2 {
            get {
                object obj = ResourceManager.GetObject("_2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _3 {
            get {
                object obj = ResourceManager.GetObject("_3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _4 {
            get {
                object obj = ResourceManager.GetObject("_4", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _5 {
            get {
                object obj = ResourceManager.GetObject("_5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _6 {
            get {
                object obj = ResourceManager.GetObject("_6", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _7 {
            get {
                object obj = ResourceManager.GetObject("_7", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _8 {
            get {
                object obj = ResourceManager.GetObject("_8", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _9 {
            get {
                object obj = ResourceManager.GetObject("_9", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (build: {0}) ähnelt.
        /// </summary>
        internal static string About_BuildNumber {
            get {
                return ResourceManager.GetString("About_BuildNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find displays, extensions, and updates at: ähnelt.
        /// </summary>
        internal static string About_FindInformationLabel {
            get {
                return ResourceManager.GetString("About_FindInformationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl v{0} ähnelt.
        /// </summary>
        internal static string About_GrowlVersion {
            get {
                return ResourceManager.GetString("About_GrowlVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Icons: ähnelt.
        /// </summary>
        internal static string About_IconInfoLabel {
            get {
                return ResourceManager.GetString("About_IconInfoLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VistaICO Aero Pack - ähnelt.
        /// </summary>
        internal static string About_IconInfoLabel2 {
            get {
                return ResourceManager.GetString("About_IconInfoLabel2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original idea, inspiration, and logo: ähnelt.
        /// </summary>
        internal static string About_OriginalLabel {
            get {
                return ResourceManager.GetString("About_OriginalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl for OSX - ähnelt.
        /// </summary>
        internal static string About_OriginalLabel2 {
            get {
                return ResourceManager.GetString("About_OriginalLabel2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to forward notifications to
        ///an email account ähnelt.
        /// </summary>
        internal static string AddComputer_AddEmail {
            get {
                return ResourceManager.GetString("AddComputer_AddEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to forward notifications to
        ///an iPhone via Prowl ähnelt.
        /// </summary>
        internal static string AddComputer_AddProwl {
            get {
                return ResourceManager.GetString("AddComputer_AddProwl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hostname: ähnelt.
        /// </summary>
        internal static string AddComputer_AddressLabel {
            get {
                return ResourceManager.GetString("AddComputer_AddressLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to forward notifications
        ///to Twitter ähnelt.
        /// </summary>
        internal static string AddComputer_AddTwitter {
            get {
                return ResourceManager.GetString("AddComputer_AddTwitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format: ähnelt.
        /// </summary>
        internal static string AddComputer_FormatLabel {
            get {
                return ResourceManager.GetString("AddComputer_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forward Notifications ähnelt.
        /// </summary>
        internal static string AddComputer_FormTitle_Forward {
            get {
                return ResourceManager.GetString("AddComputer_FormTitle_Forward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscribe to notifications ähnelt.
        /// </summary>
        internal static string AddComputer_FormTitle_Subscriptions {
            get {
                return ResourceManager.GetString("AddComputer_FormTitle_Subscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to manually add a computer
        ///that is not in this list ähnelt.
        /// </summary>
        internal static string AddComputer_ManualAdd {
            get {
                return ResourceManager.GetString("AddComputer_ManualAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name: ähnelt.
        /// </summary>
        internal static string AddComputer_NameLabel {
            get {
                return ResourceManager.GetString("AddComputer_NameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password: ähnelt.
        /// </summary>
        internal static string AddComputer_PasswordLabel {
            get {
                return ResourceManager.GetString("AddComputer_PasswordLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port: ähnelt.
        /// </summary>
        internal static string AddComputer_PortLabel {
            get {
                return ResourceManager.GetString("AddComputer_PortLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Any Priority] ähnelt.
        /// </summary>
        internal static string AddEmail_AnyPriority {
            get {
                return ResourceManager.GetString("AddEmail_AnyPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die edit ähnelt.
        /// </summary>
        internal static string AddEmail_EditSMTP {
            get {
                return ResourceManager.GetString("AddEmail_EditSMTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Email Address: ähnelt.
        /// </summary>
        internal static string AddEmail_EmailAddressLabel {
            get {
                return ResourceManager.GetString("AddEmail_EmailAddressLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only forward when priority is at least: ähnelt.
        /// </summary>
        internal static string AddEmail_MinimumPriorityLabel {
            get {
                return ResourceManager.GetString("AddEmail_MinimumPriorityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: ähnelt.
        /// </summary>
        internal static string AddEmail_NameLabel {
            get {
                return ResourceManager.GetString("AddEmail_NameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only forward when idle or away ähnelt.
        /// </summary>
        internal static string AddEmail_OnlyWhenIdle {
            get {
                return ResourceManager.GetString("AddEmail_OnlyWhenIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die done ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPDone {
            get {
                return ResourceManager.GetString("AddEmail_SMTPDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password: ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPPasswordLabel {
            get {
                return ResourceManager.GetString("AddEmail_SMTPPasswordLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port: ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPPortLabel {
            get {
                return ResourceManager.GetString("AddEmail_SMTPPortLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server: ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPServerLabel {
            get {
                return ResourceManager.GetString("AddEmail_SMTPServerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMTP Settings: ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPSettingsLabel {
            get {
                return ResourceManager.GetString("AddEmail_SMTPSettingsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Authentication ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPUseAuthentication {
            get {
                return ResourceManager.GetString("AddEmail_SMTPUseAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username: ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPUsernameLabel {
            get {
                return ResourceManager.GetString("AddEmail_SMTPUsernameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use SSL ähnelt.
        /// </summary>
        internal static string AddEmail_SMTPUseSSL {
            get {
                return ResourceManager.GetString("AddEmail_SMTPUseSSL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name: ähnelt.
        /// </summary>
        internal static string AddNotifyIO_NameLabel {
            get {
                return ResourceManager.GetString("AddNotifyIO_NameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outlet Url: ähnelt.
        /// </summary>
        internal static string AddNotifyIO_OutletUrlLabel {
            get {
                return ResourceManager.GetString("AddNotifyIO_OutletUrlLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Any Priority] ähnelt.
        /// </summary>
        internal static string AddProwl_AnyPriority {
            get {
                return ResourceManager.GetString("AddProwl_AnyPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die API Key: ähnelt.
        /// </summary>
        internal static string AddProwl_APIKeyLabel {
            get {
                return ResourceManager.GetString("AddProwl_APIKeyLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only forward when priority is at least: ähnelt.
        /// </summary>
        internal static string AddProwl_MinimumPriorityLabel {
            get {
                return ResourceManager.GetString("AddProwl_MinimumPriorityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: ähnelt.
        /// </summary>
        internal static string AddProwl_NameLabel {
            get {
                return ResourceManager.GetString("AddProwl_NameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only forward when idle or away ähnelt.
        /// </summary>
        internal static string AddProwl_OnlyWhenIdle {
            get {
                return ResourceManager.GetString("AddProwl_OnlyWhenIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscribe to Growl notifications\non another machine ähnelt.
        /// </summary>
        internal static string AddSubscription_AddGNTP {
            get {
                return ResourceManager.GetString("AddSubscription_AddGNTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscribe to notify.io outlet ähnelt.
        /// </summary>
        internal static string AddSubscription_AddNotifyIO {
            get {
                return ResourceManager.GetString("AddSubscription_AddNotifyIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Any Priority] ähnelt.
        /// </summary>
        internal static string AddTwitter_AnyPriority {
            get {
                return ResourceManager.GetString("AddTwitter_AnyPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format: ähnelt.
        /// </summary>
        internal static string AddTwitter_FormatLabel {
            get {
                return ResourceManager.GetString("AddTwitter_FormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only forward when priority is at least: ähnelt.
        /// </summary>
        internal static string AddTwitter_MinimumPriorityLabel {
            get {
                return ResourceManager.GetString("AddTwitter_MinimumPriorityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only forward when idle or away ähnelt.
        /// </summary>
        internal static string AddTwitter_OnlyWhenIdle {
            get {
                return ResourceManager.GetString("AddTwitter_OnlyWhenIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password: ähnelt.
        /// </summary>
        internal static string AddTwitter_PasswordLabel {
            get {
                return ResourceManager.GetString("AddTwitter_PasswordLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username: ähnelt.
        /// </summary>
        internal static string AddTwitter_UsernameLabel {
            get {
                return ResourceManager.GetString("AddTwitter_UsernameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (All notifications) ähnelt.
        /// </summary>
        internal static string Applications_AllNotifications {
            get {
                return ResourceManager.GetString("Applications_AllNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application Name ähnelt.
        /// </summary>
        internal static string Applications_ApplicationListHeader {
            get {
                return ResourceManager.GetString("Applications_ApplicationListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When a Growl-enabled application registers to send notifications, it will appear in the list to the left and you will be able to customize its settings. ähnelt.
        /// </summary>
        internal static string Applications_NoAppsRegistered_Description {
            get {
                return ResourceManager.GetString("Applications_NoAppsRegistered_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Applications Have Registered Yet ähnelt.
        /// </summary>
        internal static string Applications_NoAppsRegistered_Title {
            get {
                return ResourceManager.GetString("Applications_NoAppsRegistered_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notification Type ähnelt.
        /// </summary>
        internal static string Applications_NotificationListHeader {
            get {
                return ResourceManager.GetString("Applications_NotificationListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display: ähnelt.
        /// </summary>
        internal static string Applications_Preferences_DisplayLabel {
            get {
                return ResourceManager.GetString("Applications_Preferences_DisplayLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duration: ähnelt.
        /// </summary>
        internal static string Applications_Preferences_DurationLabel {
            get {
                return ResourceManager.GetString("Applications_Preferences_DurationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled: ähnelt.
        /// </summary>
        internal static string Applications_Preferences_EnabledLabel {
            get {
                return ResourceManager.GetString("Applications_Preferences_EnabledLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forwarding: ähnelt.
        /// </summary>
        internal static string Applications_Preferences_ForwardingLabel {
            get {
                return ResourceManager.GetString("Applications_Preferences_ForwardingLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority: ähnelt.
        /// </summary>
        internal static string Applications_Preferences_PriorityLabel {
            get {
                return ResourceManager.GetString("Applications_Preferences_PriorityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sound: ähnelt.
        /// </summary>
        internal static string Applications_Preferences_SoundLabel {
            get {
                return ResourceManager.GetString("Applications_Preferences_SoundLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sticky: ähnelt.
        /// </summary>
        internal static string Applications_Preferences_StickyLabel {
            get {
                return ResourceManager.GetString("Applications_Preferences_StickyLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Application ähnelt.
        /// </summary>
        internal static string Applications_RemoveApplication {
            get {
                return ResourceManager.GetString("Applications_RemoveApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        internal static string Button_Cancel {
            get {
                return ResourceManager.GetString("Button_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear ähnelt.
        /// </summary>
        internal static string Button_Clear {
            get {
                return ResourceManager.GetString("Button_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        internal static string Button_Close {
            get {
                return ResourceManager.GetString("Button_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Later ähnelt.
        /// </summary>
        internal static string Button_Later {
            get {
                return ResourceManager.GetString("Button_Later", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        internal static string Button_No {
            get {
                return ResourceManager.GetString("Button_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        internal static string Button_OK {
            get {
                return ResourceManager.GetString("Button_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview ähnelt.
        /// </summary>
        internal static string Button_Preview {
            get {
                return ResourceManager.GetString("Button_Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        internal static string Button_Save {
            get {
                return ResourceManager.GetString("Button_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set as Default ähnelt.
        /// </summary>
        internal static string Button_SetAsDefault {
            get {
                return ResourceManager.GetString("Button_SetAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        internal static string Button_Yes {
            get {
                return ResourceManager.GetString("Button_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose Forwarding ähnelt.
        /// </summary>
        internal static string ChooseForwarding_FormTitle {
            get {
                return ResourceManager.GetString("ChooseForwarding_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap close_blue {
            get {
                object obj = ResourceManager.GetObject("close_blue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap close_red {
            get {
                object obj = ResourceManager.GetObject("close_red", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Default] ähnelt.
        /// </summary>
        internal static string DefaultPreference_Name {
            get {
                return ResourceManager.GetString("DefaultPreference_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display &apos;{0}&apos; is already installed. ähnelt.
        /// </summary>
        internal static string DisplayInstaller_AlreadyInstalled {
            get {
                return ResourceManager.GetString("DisplayInstaller_AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; is invalid.\n\nThe display could not be installed. ähnelt.
        /// </summary>
        internal static string DisplayInstaller_BadDefinitionFile {
            get {
                return ResourceManager.GetString("DisplayInstaller_BadDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The installation of the display was cancelled.\n\nThe display was not installed. ähnelt.
        /// </summary>
        internal static string DisplayInstaller_DownloadCancelled {
            get {
                return ResourceManager.GetString("DisplayInstaller_DownloadCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while downloading the display files.\n\nThe display was not installed. ähnelt.
        /// </summary>
        internal static string DisplayInstaller_DownloadError {
            get {
                return ResourceManager.GetString("DisplayInstaller_DownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Display ähnelt.
        /// </summary>
        internal static string DisplayInstaller_FormTitle {
            get {
                return ResourceManager.GetString("DisplayInstaller_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing display... ähnelt.
        /// </summary>
        internal static string DisplayInstaller_Installing {
            get {
                return ResourceManager.GetString("DisplayInstaller_Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The display &apos;{0}&apos; was installed successfully. ähnelt.
        /// </summary>
        internal static string DisplayInstaller_NewDisplayInstalledText {
            get {
                return ResourceManager.GetString("DisplayInstaller_NewDisplayInstalledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Display Installed ähnelt.
        /// </summary>
        internal static string DisplayInstaller_NewDisplayInstalledTitle {
            get {
                return ResourceManager.GetString("DisplayInstaller_NewDisplayInstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; does not exist.\n\nThe display could not be installed. ähnelt.
        /// </summary>
        internal static string DisplayInstaller_NonexistentDefinitionFile {
            get {
                return ResourceManager.GetString("DisplayInstaller_NonexistentDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to install the following display?\n\nName: {0}\nAuthor: {1}\nDescription: {2} ähnelt.
        /// </summary>
        internal static string DisplayInstaller_Prompt {
            get {
                return ResourceManager.GetString("DisplayInstaller_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Author: ähnelt.
        /// </summary>
        internal static string Displays_CreatedBy {
            get {
                return ResourceManager.GetString("Displays_CreatedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display Name ähnelt.
        /// </summary>
        internal static string Displays_DisplayListHeader {
            get {
                return ResourceManager.GetString("Displays_DisplayListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find &amp; install additional displays ähnelt.
        /// </summary>
        internal static string Displays_FindMore {
            get {
                return ResourceManager.GetString("Displays_FindMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Identify... ähnelt.
        /// </summary>
        internal static string Displays_MultiMonitor_Identify {
            get {
                return ResourceManager.GetString("Displays_MultiMonitor_Identify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monitor ähnelt.
        /// </summary>
        internal static string Displays_MultiMonitor_Monitor {
            get {
                return ResourceManager.GetString("Displays_MultiMonitor_Monitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Primary ähnelt.
        /// </summary>
        internal static string Displays_MultiMonitor_Primary {
            get {
                return ResourceManager.GetString("Displays_MultiMonitor_Primary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap email {
            get {
                object obj = ResourceManager.GetObject("email", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl was unable to start ähnelt.
        /// </summary>
        internal static string FailedToStart_Caption {
            get {
                return ResourceManager.GetString("FailedToStart_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is already a listener enabled on Growl&apos;s TCP port ({0}).
        ///
        ///If another version of Growl is already running, please close that version and try again. ähnelt.
        /// </summary>
        internal static string FailedToStart_Message_GNTP {
            get {
                return ResourceManager.GetString("FailedToStart_Message_GNTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is already a listener enabled on Growl&apos;s legacy UDP port ({0}).
        ///
        ///If another version of Growl is already running, please close that version and try again. ähnelt.
        /// </summary>
        internal static string FailedToStart_Message_UDP {
            get {
                return ResourceManager.GetString("FailedToStart_Message_UDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugin &apos;{0}&apos; is already installed. ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_AlreadyInstalled {
            get {
                return ResourceManager.GetString("ForwarderInstaller_AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; is invalid.\n\nThe plugin could not be installed. ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_BadDefinitionFile {
            get {
                return ResourceManager.GetString("ForwarderInstaller_BadDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The installation of the plugin was cancelled.\n\nThe plugin was not installed. ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_DownloadCancelled {
            get {
                return ResourceManager.GetString("ForwarderInstaller_DownloadCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while downloading the plugin files.\n\nThe plugin was not installed. ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_DownloadError {
            get {
                return ResourceManager.GetString("ForwarderInstaller_DownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Forwarder Plugin ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_FormTitle {
            get {
                return ResourceManager.GetString("ForwarderInstaller_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The plugin &apos;{0}&apos; was installed successfully. ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_InstalledText {
            get {
                return ResourceManager.GetString("ForwarderInstaller_InstalledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Plugin Installed ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_InstalledTitle {
            get {
                return ResourceManager.GetString("ForwarderInstaller_InstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing plugin... ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_Installing {
            get {
                return ResourceManager.GetString("ForwarderInstaller_Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; does not exist.\n\nThe plugin could not be installed. ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_NonexistentDefinitionFile {
            get {
                return ResourceManager.GetString("ForwarderInstaller_NonexistentDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to install the following plugin?\n\nName: {0}\nAuthor: {1}\nDescription: {2} ähnelt.
        /// </summary>
        internal static string ForwarderInstaller_Prompt {
            get {
                return ResourceManager.GetString("ForwarderInstaller_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl is paused ähnelt.
        /// </summary>
        internal static string General_ApplicationPaused {
            get {
                return ResourceManager.GetString("General_ApplicationPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl is running ähnelt.
        /// </summary>
        internal static string General_ApplicationRunning {
            get {
                return ResourceManager.GetString("General_ApplicationRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl is stopped ähnelt.
        /// </summary>
        internal static string General_ApplicationStopped {
            get {
                return ResourceManager.GetString("General_ApplicationStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically start Growl at login ähnelt.
        /// </summary>
        internal static string General_AutoStart {
            get {
                return ResourceManager.GetString("General_AutoStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically pause Growl when a fullscreen application is running ähnelt.
        /// </summary>
        internal static string General_FullscreenSettings_AutoPause {
            get {
                return ResourceManager.GetString("General_FullscreenSettings_AutoPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full-screen Settings ähnelt.
        /// </summary>
        internal static string General_FullscreenSettingsTitle {
            get {
                return ResourceManager.GetString("General_FullscreenSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Consider me idle after {0} seconds ähnelt.
        /// </summary>
        internal static string General_IdleSettings_IdleAfter {
            get {
                return ResourceManager.GetString("General_IdleSettings_IdleAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Never consider me idle or away ähnelt.
        /// </summary>
        internal static string General_IdleSettings_NeverIdle {
            get {
                return ResourceManager.GetString("General_IdleSettings_NeverIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Idle Settings ähnelt.
        /// </summary>
        internal static string General_IdleSettingsTitle {
            get {
                return ResourceManager.GetString("General_IdleSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mute all sounds ähnelt.
        /// </summary>
        internal static string General_SoundSettings_MuteLabel {
            get {
                return ResourceManager.GetString("General_SoundSettings_MuteLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default Sound: ähnelt.
        /// </summary>
        internal static string General_SoundSettings_SoundLabel {
            get {
                return ResourceManager.GetString("General_SoundSettings_SoundLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sound Settings ähnelt.
        /// </summary>
        internal static string General_SoundSettingsTitle {
            get {
                return ResourceManager.GetString("General_SoundSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap generic_application {
            get {
                object obj = ResourceManager.GetObject("generic_application", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon growl_dim {
            get {
                object obj = ResourceManager.GetObject("growl_dim", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon growl_on {
            get {
                object obj = ResourceManager.GetObject("growl_on", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon growl_stopped {
            get {
                object obj = ResourceManager.GetObject("growl_stopped", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application ähnelt.
        /// </summary>
        internal static string History_Columns_Application {
            get {
                return ResourceManager.GetString("History_Columns_Application", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Origin ähnelt.
        /// </summary>
        internal static string History_Columns_Origin {
            get {
                return ResourceManager.GetString("History_Columns_Origin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        internal static string History_Columns_Text {
            get {
                return ResourceManager.GetString("History_Columns_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timestamp ähnelt.
        /// </summary>
        internal static string History_Columns_Timestamp {
            get {
                return ResourceManager.GetString("History_Columns_Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title ähnelt.
        /// </summary>
        internal static string History_Columns_Title {
            get {
                return ResourceManager.GetString("History_Columns_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details View ähnelt.
        /// </summary>
        internal static string History_DetailsView {
            get {
                return ResourceManager.GetString("History_DetailsView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (No notifications for this date) ähnelt.
        /// </summary>
        internal static string History_NoNotificationsForDate {
            get {
                return ResourceManager.GetString("History_NoNotificationsForDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of Days ähnelt.
        /// </summary>
        internal static string History_NumberOfDaysTitle {
            get {
                return ResourceManager.GetString("History_NumberOfDaysTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application ähnelt.
        /// </summary>
        internal static string History_SortBy_Application {
            get {
                return ResourceManager.GetString("History_SortBy_Application", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date ähnelt.
        /// </summary>
        internal static string History_SortBy_Date {
            get {
                return ResourceManager.GetString("History_SortBy_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group By ähnelt.
        /// </summary>
        internal static string History_SortByTitle {
            get {
                return ResourceManager.GetString("History_SortByTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tile View ähnelt.
        /// </summary>
        internal static string History_TileView {
            get {
                return ResourceManager.GetString("History_TileView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap internet {
            get {
                object obj = ResourceManager.GetObject("internet", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap iphone {
            get {
                object obj = ResourceManager.GetObject("iphone", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &apos;{0}&apos; language pack is already installed. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_AlreadyInstalled {
            get {
                return ResourceManager.GetString("LanguageInstaller_AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; is invalid.\n\nThe language pack could not be installed. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_BadDefinitionFile {
            get {
                return ResourceManager.GetString("LanguageInstaller_BadDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The installation of the language pack was cancelled.\n\nThe language pack was not installed. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_DownloadCancelled {
            get {
                return ResourceManager.GetString("LanguageInstaller_DownloadCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while downloading the language pack files.\n\nThe language pack was not installed. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_DownloadError {
            get {
                return ResourceManager.GetString("LanguageInstaller_DownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Language Pack ähnelt.
        /// </summary>
        internal static string LanguageInstaller_FormTitle {
            get {
                return ResourceManager.GetString("LanguageInstaller_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing language pack... ähnelt.
        /// </summary>
        internal static string LanguageInstaller_Installing {
            get {
                return ResourceManager.GetString("LanguageInstaller_Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &apos;{0}&apos; language pack was installed successfully. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_LanguageInstalledText {
            get {
                return ResourceManager.GetString("LanguageInstaller_LanguageInstalledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language Pack Installed ähnelt.
        /// </summary>
        internal static string LanguageInstaller_LanguageInstalledTitle {
            get {
                return ResourceManager.GetString("LanguageInstaller_LanguageInstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; does not exist.\n\nThe language pack could not be installed. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_NonexistentDefinitionFile {
            get {
                return ResourceManager.GetString("LanguageInstaller_NonexistentDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to install the language pack for the following language:  {0}\n\nNOTE: Users running Vista or Windows 7 must have administrator privileges to install language packs. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_Prompt {
            get {
                return ResourceManager.GetString("LanguageInstaller_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must restart Growl for the changes to take effect. ähnelt.
        /// </summary>
        internal static string LanguageInstaller_RestartRequiredText {
            get {
                return ResourceManager.GetString("LanguageInstaller_RestartRequiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap linux {
            get {
                object obj = ResourceManager.GetObject("linux", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always ähnelt.
        /// </summary>
        internal static string LiteralString_Always {
            get {
                return ResourceManager.GetString("LiteralString_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die format ähnelt.
        /// </summary>
        internal static string LiteralString_Format {
            get {
                return ResourceManager.GetString("LiteralString_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Idle Only ähnelt.
        /// </summary>
        internal static string LiteralString_IdleOnly {
            get {
                return ResourceManager.GetString("LiteralString_IdleOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die invalid url ähnelt.
        /// </summary>
        internal static string LiteralString_InvalidUrl {
            get {
                return ResourceManager.GetString("LiteralString_InvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received At ähnelt.
        /// </summary>
        internal static string LiteralString_ReceivedAt {
            get {
                return ResourceManager.GetString("LiteralString_ReceivedAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received From ähnelt.
        /// </summary>
        internal static string LiteralString_ReceivedFrom {
            get {
                return ResourceManager.GetString("LiteralString_ReceivedFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die seconds ähnelt.
        /// </summary>
        internal static string LiteralString_Seconds {
            get {
                return ResourceManager.GetString("LiteralString_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die connecting... ähnelt.
        /// </summary>
        internal static string LiteralString_Status_Connecting {
            get {
                return ResourceManager.GetString("LiteralString_Status_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die reconnecting... ähnelt.
        /// </summary>
        internal static string LiteralString_Status_Reconnecting {
            get {
                return ResourceManager.GetString("LiteralString_Status_Reconnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Today ähnelt.
        /// </summary>
        internal static string LiteralString_Today {
            get {
                return ResourceManager.GetString("LiteralString_Today", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yesterday ähnelt.
        /// </summary>
        internal static string LiteralString_Yesterday {
            get {
                return ResourceManager.GetString("LiteralString_Yesterday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading application list... ähnelt.
        /// </summary>
        internal static string Loading_ApplicationList {
            get {
                return ResourceManager.GetString("Loading_ApplicationList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading display &apos;{0}&apos; ... ähnelt.
        /// </summary>
        internal static string Loading_Display {
            get {
                return ResourceManager.GetString("Loading_Display", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Displays... ähnelt.
        /// </summary>
        internal static string Loading_Displays {
            get {
                return ResourceManager.GetString("Loading_Displays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading history... ähnelt.
        /// </summary>
        internal static string Loading_History {
            get {
                return ResourceManager.GetString("Loading_History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing... ähnelt.
        /// </summary>
        internal static string Loading_Initializing {
            get {
                return ResourceManager.GetString("Loading_Initializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Preferences... ähnelt.
        /// </summary>
        internal static string Loading_Preferences {
            get {
                return ResourceManager.GetString("Loading_Preferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready ähnelt.
        /// </summary>
        internal static string Loading_Ready {
            get {
                return ResourceManager.GetString("Loading_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting Growl... ähnelt.
        /// </summary>
        internal static string Loading_Starting {
            get {
                return ResourceManager.GetString("Loading_Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mac {
            get {
                object obj = ResourceManager.GetObject("mac", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You missed {0} messages while you were away. ähnelt.
        /// </summary>
        internal static string Missed_Summary {
            get {
                return ResourceManager.GetString("Missed_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mobile {
            get {
                object obj = ResourceManager.GetObject("mobile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap multiplemonitors {
            get {
                object obj = ResourceManager.GetObject("multiplemonitors", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit ähnelt.
        /// </summary>
        internal static string Network_EditComputer {
            get {
                return ResourceManager.GetString("Network_EditComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forward notifications to other computers ähnelt.
        /// </summary>
        internal static string Network_ForwardNotifications {
            get {
                return ResourceManager.GetString("Network_ForwardNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        internal static string Network_RemoveComputer {
            get {
                return ResourceManager.GetString("Network_RemoveComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscribe to notifications from other computers ähnelt.
        /// </summary>
        internal static string Network_SubscribeToNotifications {
            get {
                return ResourceManager.GetString("Network_SubscribeToNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for updates ähnelt.
        /// </summary>
        internal static string NotifyIcon_ContextMenu_CheckForUpdates {
            get {
                return ResourceManager.GetString("NotifyIcon_ContextMenu_CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        internal static string NotifyIcon_ContextMenu_Exit {
            get {
                return ResourceManager.GetString("NotifyIcon_ContextMenu_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mute ähnelt.
        /// </summary>
        internal static string NotifyIcon_ContextMenu_Mute {
            get {
                return ResourceManager.GetString("NotifyIcon_ContextMenu_Mute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pause Growl ähnelt.
        /// </summary>
        internal static string NotifyIcon_ContextMenu_Pause {
            get {
                return ResourceManager.GetString("NotifyIcon_ContextMenu_Pause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Growl ähnelt.
        /// </summary>
        internal static string NotifyIcon_ContextMenu_Settings {
            get {
                return ResourceManager.GetString("NotifyIcon_ContextMenu_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unmute ähnelt.
        /// </summary>
        internal static string NotifyIcon_ContextMenu_Unmute {
            get {
                return ResourceManager.GetString("NotifyIcon_ContextMenu_Unmute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unpause Growl ähnelt.
        /// </summary>
        internal static string NotifyIcon_ContextMenu_Unpause {
            get {
                return ResourceManager.GetString("NotifyIcon_ContextMenu_Unpause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl (not running) ähnelt.
        /// </summary>
        internal static string NotifyIcon_NotRunning {
            get {
                return ResourceManager.GetString("NotifyIcon_NotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl (paused) ähnelt.
        /// </summary>
        internal static string NotifyIcon_Paused {
            get {
                return ResourceManager.GetString("NotifyIcon_Paused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl ähnelt.
        /// </summary>
        internal static string NotifyIcon_Running {
            get {
                return ResourceManager.GetString("NotifyIcon_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap notifyio {
            get {
                object obj = ResourceManager.GetObject("notifyio", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Web Notification ähnelt.
        /// </summary>
        internal static string NotifyIO_NotificationType {
            get {
                return ResourceManager.GetString("NotifyIO_NotificationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap other {
            get {
                object obj = ResourceManager.GetObject("other", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die False ähnelt.
        /// </summary>
        internal static string PrefEnabled_False {
            get {
                return ResourceManager.GetString("PrefEnabled_False", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die True ähnelt.
        /// </summary>
        internal static string PrefEnabled_True {
            get {
                return ResourceManager.GetString("PrefEnabled_True", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose... ähnelt.
        /// </summary>
        internal static string PrefForward_Choose {
            get {
                return ResourceManager.GetString("PrefForward_Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Don&apos;t Forward ähnelt.
        /// </summary>
        internal static string PrefForward_Never {
            get {
                return ResourceManager.GetString("PrefForward_Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Emergency ähnelt.
        /// </summary>
        internal static string PrefPriority_Emergency {
            get {
                return ResourceManager.GetString("PrefPriority_Emergency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die High ähnelt.
        /// </summary>
        internal static string PrefPriority_High {
            get {
                return ResourceManager.GetString("PrefPriority_High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low ähnelt.
        /// </summary>
        internal static string PrefPriority_Low {
            get {
                return ResourceManager.GetString("PrefPriority_Low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Normal ähnelt.
        /// </summary>
        internal static string PrefPriority_Normal {
            get {
                return ResourceManager.GetString("PrefPriority_Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Very Low ähnelt.
        /// </summary>
        internal static string PrefPriority_VeryLow {
            get {
                return ResourceManager.GetString("PrefPriority_VeryLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string PrefSound_None {
            get {
                return ResourceManager.GetString("PrefSound_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always ähnelt.
        /// </summary>
        internal static string PrefSticky_Always {
            get {
                return ResourceManager.GetString("PrefSticky_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Never ähnelt.
        /// </summary>
        internal static string PrefSticky_Never {
            get {
                return ResourceManager.GetString("PrefSticky_Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When Idle ähnelt.
        /// </summary>
        internal static string PrefSticky_WhenIdle {
            get {
                return ResourceManager.GetString("PrefSticky_WhenIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GNTP ähnelt.
        /// </summary>
        internal static string Protocol_Type_GNTP {
            get {
                return ResourceManager.GetString("Protocol_Type_GNTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UDP ähnelt.
        /// </summary>
        internal static string Protocol_Type_UDP {
            get {
                return ResourceManager.GetString("Protocol_Type_UDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have successfully configured Growl to forward notifications to Prowl ähnelt.
        /// </summary>
        internal static string ProwlConfirmation_Text {
            get {
                return ResourceManager.GetString("ProwlConfirmation_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prowl Test ähnelt.
        /// </summary>
        internal static string ProwlConfirmation_Title {
            get {
                return ResourceManager.GetString("ProwlConfirmation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///
        ///&lt;!-- if you dont run a proxy server OR want Growl to auto-detect your IE proxy settings, leave this file as-is --&gt;
        ///&lt;!-- otherwise, if you want to override your default IE proxy address or port OR you need to pass custom authentication credentials, set those values here --&gt;
        ///&lt;appSettings&gt;
        ///  &lt;add key=&quot;ProxyAddress&quot; value=&quot;&quot;/&gt;
        ///  &lt;add key=&quot;ProxyUsername&quot; value=&quot;&quot;/&gt;
        ///  &lt;add key=&quot;ProxyPassword&quot; value=&quot;&quot;/&gt;
        ///  &lt;add key=&quot;ProxyDomain&quot; value=&quot;&quot;/&gt;
        ///&lt;/appSettings&gt;
        ///
        ///
        ///&lt;!--  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string proxy {
            get {
                return ResourceManager.GetString("proxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap rss {
            get {
                object obj = ResourceManager.GetObject("rss", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow network notifications ähnelt.
        /// </summary>
        internal static string Security_AllowNetworkNotifications {
            get {
                return ResourceManager.GetString("Security_AllowNetworkNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow clients to subscribe to notifications ähnelt.
        /// </summary>
        internal static string Security_AllowSubscriptions {
            get {
                return ResourceManager.GetString("Security_AllowSubscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow notifications from websites ähnelt.
        /// </summary>
        internal static string Security_AllowWebNotifications {
            get {
                return ResourceManager.GetString("Security_AllowWebNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: ähnelt.
        /// </summary>
        internal static string Security_PasswordManager_DescriptionLabel {
            get {
                return ResourceManager.GetString("Security_PasswordManager_DescriptionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit ähnelt.
        /// </summary>
        internal static string Security_PasswordManager_Edit {
            get {
                return ResourceManager.GetString("Security_PasswordManager_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter your password below as well as a short description to identify the password. ähnelt.
        /// </summary>
        internal static string Security_PasswordManager_Instructions {
            get {
                return ResourceManager.GetString("Security_PasswordManager_Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password: ähnelt.
        /// </summary>
        internal static string Security_PasswordManager_PasswordLabel {
            get {
                return ResourceManager.GetString("Security_PasswordManager_PasswordLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password Manager ähnelt.
        /// </summary>
        internal static string Security_PasswordManager_Title {
            get {
                return ResourceManager.GetString("Security_PasswordManager_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Require password for LAN apps ähnelt.
        /// </summary>
        internal static string Security_RequirePasswordLANApps {
            get {
                return ResourceManager.GetString("Security_RequirePasswordLANApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Require password for local apps ähnelt.
        /// </summary>
        internal static string Security_RequirePasswordLocalApps {
            get {
                return ResourceManager.GetString("Security_RequirePasswordLocalApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl ähnelt.
        /// </summary>
        internal static string SettingsForm_FormTitle {
            get {
                return ResourceManager.GetString("SettingsForm_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading... ähnelt.
        /// </summary>
        internal static string SplashScreen_Loading {
            get {
                return ResourceManager.GetString("SplashScreen_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl for Windows ähnelt.
        /// </summary>
        internal static string SplashScreen_Title {
            get {
                return ResourceManager.GetString("SplashScreen_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version: {0} ähnelt.
        /// </summary>
        internal static string SplashScreen_Version {
            get {
                return ResourceManager.GetString("SplashScreen_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugin &apos;{0}&apos; is already installed. ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_AlreadyInstalled {
            get {
                return ResourceManager.GetString("SubscriberInstaller_AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; is invalid.\n\nThe plugin could not be installed. ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_BadDefinitionFile {
            get {
                return ResourceManager.GetString("SubscriberInstaller_BadDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The installation of the plugin was cancelled.\n\nThe plugin was not installed. ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_DownloadCancelled {
            get {
                return ResourceManager.GetString("SubscriberInstaller_DownloadCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while downloading the plugin files.\n\nThe plugin was not installed. ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_DownloadError {
            get {
                return ResourceManager.GetString("SubscriberInstaller_DownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Subscriber Plugin ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_FormTitle {
            get {
                return ResourceManager.GetString("SubscriberInstaller_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The plugin &apos;{0}&apos; was installed successfully. ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_InstalledText {
            get {
                return ResourceManager.GetString("SubscriberInstaller_InstalledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Plugin Installed ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_InstalledTitle {
            get {
                return ResourceManager.GetString("SubscriberInstaller_InstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing plugin... ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_Installing {
            get {
                return ResourceManager.GetString("SubscriberInstaller_Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The definition file &apos;{0}&apos; does not exist.\n\nThe plugin could not be installed. ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_NonexistentDefinitionFile {
            get {
                return ResourceManager.GetString("SubscriberInstaller_NonexistentDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to install the following plugin?\n\nName: {0}\nAuthor: {1}\nDescription: {2} ähnelt.
        /// </summary>
        internal static string SubscriberInstaller_Prompt {
            get {
                return ResourceManager.GetString("SubscriberInstaller_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl ähnelt.
        /// </summary>
        internal static string SystemNotification_ApplicationName {
            get {
                return ResourceManager.GetString("SystemNotification_ApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The application &apos;{0}&apos; has registered to send notifications. ähnelt.
        /// </summary>
        internal static string SystemNotification_AppRegistered_Text {
            get {
                return ResourceManager.GetString("SystemNotification_AppRegistered_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application Registration ähnelt.
        /// </summary>
        internal static string SystemNotification_AppRegistered_Title {
            get {
                return ResourceManager.GetString("SystemNotification_AppRegistered_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The client &apos;{0}&apos; has subscribed to received forwarded notifications. ähnelt.
        /// </summary>
        internal static string SystemNotification_ClientSubscribed_Text {
            get {
                return ResourceManager.GetString("SystemNotification_ClientSubscribed_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Client Subscribed ähnelt.
        /// </summary>
        internal static string SystemNotification_ClientSubscribed_Title {
            get {
                return ResourceManager.GetString("SystemNotification_ClientSubscribed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is a preview of the &apos;{0}&apos; display style. ähnelt.
        /// </summary>
        internal static string SystemNotification_Preview_Text {
            get {
                return ResourceManager.GetString("SystemNotification_Preview_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview Display Style ähnelt.
        /// </summary>
        internal static string SystemNotification_Preview_Title {
            get {
                return ResourceManager.GetString("SystemNotification_Preview_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl is running ähnelt.
        /// </summary>
        internal static string SystemNotification_Running_Text {
            get {
                return ResourceManager.GetString("SystemNotification_Running_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl ähnelt.
        /// </summary>
        internal static string SystemNotification_Running_Title {
            get {
                return ResourceManager.GetString("SystemNotification_Running_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap toasty {
            get {
                object obj = ResourceManager.GetObject("toasty", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        internal static string Toolbar_About {
            get {
                return ResourceManager.GetString("Toolbar_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applications ähnelt.
        /// </summary>
        internal static string Toolbar_Applications {
            get {
                return ResourceManager.GetString("Toolbar_Applications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays ähnelt.
        /// </summary>
        internal static string Toolbar_Displays {
            get {
                return ResourceManager.GetString("Toolbar_Displays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        internal static string Toolbar_General {
            get {
                return ResourceManager.GetString("Toolbar_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die History ähnelt.
        /// </summary>
        internal static string Toolbar_History {
            get {
                return ResourceManager.GetString("Toolbar_History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        internal static string Toolbar_Network {
            get {
                return ResourceManager.GetString("Toolbar_Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security ähnelt.
        /// </summary>
        internal static string Toolbar_Security {
            get {
                return ResourceManager.GetString("Toolbar_Security", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap twitter {
            get {
                object obj = ResourceManager.GetObject("twitter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download complete. Starting installation... ähnelt.
        /// </summary>
        internal static string Updater_DownloadComplete {
            get {
                return ResourceManager.GetString("Updater_DownloadComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading update... ähnelt.
        /// </summary>
        internal static string Updater_DownloadingUpdate {
            get {
                return ResourceManager.GetString("Updater_DownloadingUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for Updates ähnelt.
        /// </summary>
        internal static string Updater_FormTitle {
            get {
                return ResourceManager.GetString("Updater_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Growl is up-to-date. Current Version: {1} ähnelt.
        /// </summary>
        internal static string Updater_GrowlIsUpToDate {
            get {
                return ResourceManager.GetString("Updater_GrowlIsUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version {0} of Growl is available. Would you like to update Growl to the latest version? (Current version: {1}) ähnelt.
        /// </summary>
        internal static string Updater_UpdateAvailable {
            get {
                return ResourceManager.GetString("Updater_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap windows {
            get {
                object obj = ResourceManager.GetObject("windows", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
